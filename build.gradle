plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.21'
    id 'java'

    id 'org.springframework.boot' version '2.4.0'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
}

group = 'de.amirrocker'
version = '1.0-SNAPSHOT'

configurations {
    umlDoclet
}

repositories {
    mavenCentral()
}

dependencies {

    umlDoclet 'nl.talsmasoftware:umldoclet:2.0.14'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2-native-mt'

//    this is a on-top library - adding convenience to rxJava
    implementation "io.reactivex.rxjava3:rxkotlin:3.0.1"

    implementation 'io.reactivex.rxjava3:rxjava:3.1.2'

    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit:1.5.31'


    // dokka for javadoc ?
    // look here :
    // https://kotlinlang.org/docs/reference/kotlin-doc.html
    // and here:
    // https://github.com/Kotlin/dokka
    // get the cli for dokka
    // https://mvnrepository.com/artifact/org.jetbrains.dokka/dokka-cli
    compile group: 'org.jetbrains.dokka', name: 'dokka-cli', version: '1.4.10.2'

    /* dependency of http4k */
    implementation platform("org.http4k:http4k-bom:3.278.0")
    implementation 'org.http4k:http4k-core:4.14.1.4'
    implementation 'org.http4k:http4k-server-netty:4.14.1.4'
    implementation 'org.http4k:http4k-client-apache:4.14.1.4'

    /* a kotlin Google gson implementation with a more concise language */
    implementation 'com.github.salomonbrys.kotson:kotson:2.5.0'

    /*
    * spring jdbc -> This is only sensible when compiling for a springboot app or a TorandoFX
    * implementation since too heavy weight for mobile phones, given also that lightweight
    * optimized solutions like Room exist and should be used.
    *  */
    implementation 'org.springframework.boot:spring-boot-starter-jdbc:2.5.5'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.5'


}

test {
    useJUnit()
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
    kotlinOptions {
        languageVersion = "1.5"
    }
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

javadoc {
    source = sourceSets.main.allJava
    options.docletpath = configurations.umlDoclet.files.asType(List)
    options.doclet = "nl.talsmasoftware.umldoclet.UMLDoclet"
    options.addStringOption "additionalParamName", "additionalParamName"
}